import requestsimport timefrom fake_useragent import UserAgent# Because of opening this might course some problem, so I close this.user_agent = UserAgent(use_cache_server=False)class WebRequest:    def __init__(self, *args, **kwargs):        pass    @property    def user_agent(self):        """        return an User-Agent at random        :return:        """        return user_agent.random    @property    def header(self):        """        basic header        :return:        """        return {'User-Agent': self.user_agent,                'Accept': '*/*',                'Connection': 'keep-alive',                'Accept-Language': 'zh-CN,zh;q=0.8'}    def get(self, url, header=None, retry_time=5, timeout=30,            retry_flag=list(), retry_interval=5, *args, **kwargs):        """        get method        :param url: target url        :param header: headers        :param retry_time: retry time when network error        :param timeout: network timeout        :param retry_flag: if retry_flag in content. do retry        :param retry_interval: retry interval(second)        :param args:        :param kwargs:        :return:        """        headers = self.header        if header and isinstance(header, dict):            headers.update(header)        while True:            # noinspection PyBroadException            try:                html = requests.get(url, headers=headers, timeout=timeout)                if any(f in html.content for f in retry_flag):                    raise Exception                return html            except Exception as e:                retry_time -= 1                if retry_time <= 0:                    # Retry too many time back to baidu.com.                    return requests.get("https://www.baidu.com/")                time.sleep(retry_interval)if __name__ == '__main__':    pass